name: Azure ARM with Cronitor Automated Schedule and Monitoring

on:
  # Step 1: Integrate Cronitor monitoring
  workflow_run:
    workflows: ['Stage Deploy']
    types: [requested,completed]
    
    branches:
      - main  
    
  #workflow_dispatch: # Activate this for manual run
    # Use workflow_dispatch to manually trigger the workflow and verify 
    # https://crontab.cronhub.io/
    # Run at 7:20 AM UTC on July 2, 2024
    # Run at 6:25 AM UTC on July 2, 2024
  schedule:
    - cron: '26 7 * * *' # use this if schedule is for the same day
    - cron: '33 7 2 7 *'
    - cron: '36 7 2 7 *'

jobs:
    build-and-deploy:
      runs-on: ubuntu-latest
      steps:

      # Step 2: Integrate Cronitor monitoring
      - name: Send execution details to the Cronitor for Github Actions agent
        uses: cronitorio/monitor-github-actions@v7
        with:
          event: ${{ toJSON(github.event) }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          cronitor_key: ${{ secrets.CRONITOR_API_KEY }}
          cronitor_group: actions
          cronitor_notify: default

        # Checkout code
      - uses: actions/checkout@main

        # Log into Azure
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

        # Deploy ARM template
      - name: Run ARM deploy
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: rg-mktDp-eastus-prod-7yt56
          template: ./vNetARMTemplateDeploy.json

        # output containerName variable from template
      - run: echo ${{ steps.deploy.outputs.containerName }}
